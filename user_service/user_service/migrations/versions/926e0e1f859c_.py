"""empty message

Revision ID: 926e0e1f859c
Revises: 
Create Date: 2022-07-26 18:52:24.927189

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '926e0e1f859c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('branch',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pageallocation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('route', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=True),
    sa.Column('psection', sa.String(length=100), nullable=False),
    sa.Column('ssection', sa.String(length=100), nullable=False),
    sa.Column('pposition', sa.Integer(), nullable=False),
    sa.Column('sposition', sa.Integer(), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('studentregistration',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=100), nullable=False),
    sa.Column('roll_number', sa.String(length=100), nullable=False),
    sa.Column('student_address', sa.String(length=100), nullable=False),
    sa.Column('gender', sa.String(length=15), nullable=False),
    sa.Column('date_of_birth', sa.String(length=20), nullable=False),
    sa.Column('parent_name', sa.String(length=100), nullable=False),
    sa.Column('parent_address', sa.String(length=100), nullable=False),
    sa.Column('parent_mobile_number', sa.String(length=15), nullable=False),
    sa.Column('parent_landline', sa.String(length=15), nullable=False),
    sa.Column('parent_email', sa.String(length=30), nullable=True),
    sa.Column('old_school_name', sa.String(length=30), nullable=False),
    sa.Column('old_school_grade', sa.String(length=100), nullable=False),
    sa.Column('old_school_joined', sa.String(length=100), nullable=False),
    sa.Column('old_school_left', sa.String(length=100), nullable=False),
    sa.Column('datetime', sa.String(length=100), nullable=False),
    sa.Column('active', sa.String(length=10), nullable=False),
    sa.Column('grade', sa.Integer(), nullable=False),
    sa.Column('join_date', sa.String(length=100), nullable=False),
    sa.Column('blood_group', sa.String(length=100), nullable=False),
    sa.Column('nationality', sa.String(length=100), nullable=False),
    sa.Column('student_email', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('roll_number')
    )
    op.create_table('useraddress',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('address1', sa.String(length=255), nullable=False),
    sa.Column('address2', sa.String(length=255), nullable=True),
    sa.Column('address3', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.Column('postal_code', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('studentattendance',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_code', sa.String(length=100), nullable=False),
    sa.Column('student_name', sa.String(length=100), nullable=False),
    sa.Column('date', sa.String(length=100), nullable=False),
    sa.Column('day', sa.String(length=100), nullable=False),
    sa.Column('month', sa.String(length=100), nullable=False),
    sa.Column('year', sa.String(length=100), nullable=False),
    sa.Column('attendance', sa.String(length=100), nullable=False),
    sa.Column('remarks', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=100), nullable=False),
    sa.Column('grade', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['studentregistration.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('studentfee',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fee_type_id', sa.String(length=100), nullable=False),
    sa.Column('student_name', sa.String(length=100), nullable=False),
    sa.Column('pay_date', sa.String(length=100), nullable=False),
    sa.Column('actual_amount', sa.FLOAT(), nullable=False),
    sa.Column('pay_amount', sa.FLOAT(), nullable=False),
    sa.Column('balance_amount', sa.FLOAT(), nullable=False),
    sa.Column('total_amount', sa.FLOAT(), nullable=False),
    sa.Column('fine', sa.FLOAT(), nullable=False),
    sa.Column('prefix', sa.String(length=100), nullable=False),
    sa.Column('individual_receipt', sa.String(length=100), nullable=False),
    sa.Column('receipt_number', sa.String(length=100), nullable=False),
    sa.Column('mode_of_pay', sa.String(length=100), nullable=False),
    sa.Column('bank', sa.Integer(), nullable=False),
    sa.Column('cheque_number', sa.String(length=100), nullable=False),
    sa.Column('cheque_date', sa.DateTime(), nullable=False),
    sa.Column('remark', sa.String(length=100), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['studentregistration.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('active'),
    sa.UniqueConstraint('cheque_date'),
    sa.UniqueConstraint('cheque_number'),
    sa.UniqueConstraint('fee_type_id'),
    sa.UniqueConstraint('remark'),
    sa.UniqueConstraint('status')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('authenticated', sa.Boolean(), nullable=True),
    sa.Column('api_key', sa.String(length=255), nullable=True),
    sa.Column('date_reg', sa.DateTime(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['useraddress.id'], ),
    sa.ForeignKeyConstraint(['branch_id'], ['branch.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_key'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('userpriviledge',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('pageallocation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['pageallocation_id'], ['pageallocation.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('userpriviledge')
    op.drop_table('user')
    op.drop_table('studentfee')
    op.drop_table('studentattendance')
    op.drop_table('useraddress')
    op.drop_table('studentregistration')
    op.drop_table('roles')
    op.drop_table('pageallocation')
    op.drop_table('branch')
    # ### end Alembic commands ###
